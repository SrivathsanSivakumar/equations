import 'package:equatable/equatable.dart';
import 'package:equations/equations.dart';
import 'package:equations_solver/blocs/nonlinear_solver/models/nonlinear_types.dart';

/// States for the [NonlinearBloc] bloc.
abstract class NonlinearState extends Equatable {
  /// Initializes a [NonlinearState] instance.
  const NonlinearState();

  @override
  List<Object?> get props => [];
}

/// This state is emitted when the solver successfully finds the roots of the
/// polynomial equation.
class NonlinearGuesses extends NonlinearState {
  /// The [NonLinear] object associated to the polynomial being solved.
  final NonLinear nonLinear;

  /// The results generated by the algorithm
  final NonlinearResults nonlinearResults;

  /// Initializes a [NonlinearGuesses] instance.
  const NonlinearGuesses({
    required this.nonLinear,
    required this.nonlinearResults,
  });

  @override
  List<Object?> get props => [
        nonLinear,
        nonlinearResults,
      ];
}

/// This state is emitted when the solver cannot find the roots of the nonlinear
/// equation.
class NonlinearError extends NonlinearState {
  /// Initializes a [NonlinearError]
  const NonlinearError();
}

/// This is an initial state used to "clean" the page bringing it to a default
/// aspect.
class NonlinearNone extends NonlinearState {
  /// Initializes a [NonlinearNone]
  const NonlinearNone();
}
