import 'package:equatable/equatable.dart';
import 'package:equations/equations.dart';

/// States for the [SystemBloc] bloc.
abstract class SystemState extends Equatable {
  /// Initializes a [SystemState] instance.
  const SystemState();

  @override
  List<Object?> get props => [];
}

/// This state is emitted when the solver successfully finds the solution
/// vector of the system.
class SystemGuesses extends SystemState {
  /// The [SystemSolver] object associated to the system being solved.
  final SystemSolver systemSolver;

  /// The results generated by the algorithm.
  final List<double> solution;

  /// Initializes a [NonlinearGuesses] instance.
  const SystemGuesses({
    required this.systemSolver,
    required this.solution,
  });

  @override
  List<Object?> get props => [
        systemSolver,
        solution,
      ];
}

/// This state is emitted when the solver cannot find the solution vector of the
/// system.
class SystemError extends SystemState {
  /// Initializes a [SystemError].
  const SystemError();
}

/// This is an initial state used to "clean" the page bringing it to a default
/// aspect.
class SystemNone extends SystemState {
  /// Initializes a [SystemNone].
  const SystemNone();
}
